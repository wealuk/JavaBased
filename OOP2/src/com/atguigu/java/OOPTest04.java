package com.atguigu.java;
/*
 * 方法的重写(override / overwrite)
 * 
 * 1.重写：子类继承父类以后，可以对父类中同名同参数的方法，进行覆盖操作
 * 
 * 2.应用：重写以后，当创建子类对象以后，通过子类对象调用父类中同名同参数的方法时，
 * 实际执行的是子类重写父类的方法。
 * 
 * 3.重写的规定：
 * 			方法的声明：权限修饰符 返回值类型 方法名(形参列表) throws 异常类型{
 * 							//方法体
 * 						}
 * 					约定俗成：子类中的叫重写的方法，父类中的叫被重写的方法
 * 					①子类重写的方法的方法名和形参列表与父类被重写的方法的方法名和形参列表相同
 * 					②子类重写的方法的权限修饰符不小于父类被重写的方法权限修饰符
 * 						>特殊情况：子类不能重写父类中声明为private权限的方法
 * 					③返回值类型：
 * 						>父类被重写的方法的返回值类型是void，则子类重写的方法的返回值类型只能是void
 * 						>父类被重写的方法的返回值类型是A类型，则子类重写的方法的返回值类型可以是A类或A类的子类
 * 						>父类被重写的方法的返回值类型是基本数据类型(double)，则子类重写的方法的返回值类型必须是相同的(double)
 * 					④子类重写的方法抛出的异常类型不大于父类被重写的方法抛出的异常类型(具体放到异常处理的时候讲)
 * ****************************************************************************************
 * 					子类和父类中同名同参数的方法要么都声明为非static的（考虑重写）,要么都声明为static的(不是重写)
 * 
 * 注：防止出错，在子类中重写时①可以从父类中复制过来；②可以输入方法名，ALT+/可以找到重写提示
 * 
 * 
 * 面试题：区分方法的重载与重写(见OOPTest09)
 * 
 * notes：重载:两同一不同，并且权限修饰符和返回值类型要一样
 * 		  重写：方法名和形参列表相同，权限修饰符和返回值类型根据情况可以不同
 * 
 *
 * 
 * 
 */
public class OOPTest04 {

	//见com.atguigu.exer 的Person  Studnet PersonTest
}
